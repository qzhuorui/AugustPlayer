2020年7月19日13:06:34
完成了mic和camera数据的回调写入，feedback进codec。
下周计划完成fromat change之后添加muxer的track，进行音视频的混合。

————————————————————————————————————————————————————————————————————————

2020年7月26日14:56:38
初步定为为 encoder 时间戳问题
导致的enqueueFrame无数据，所以transmit时，muxer也拿不到数据，只有音频无视频，所以报错
下次需修改时间戳且，onframeView耗时操作放入子线程

————————————————————————————————————————————————————————————————————————

2020年8月1日11:00:52
# 当前进度：
视频录制可以播放了。

# 当前问题：
1.画质不清晰涂抹严重；2.音画不同步，视频画面缺少前部分，音频完整。

# 预计更新：画质问题
上次问题解决方案：dequeueOutputBuffer在成功获取到config帧和第一I帧后，dequeueOutputBuffer一直返回-1。queueInputBuffer第三个参数传入时间戳，可解决。

————————————————————————————————————————————————————————————————————————

2020年8月1日14:12:10
# 当前进度：
1.增加码率提高画质，修改编码器中消费生产者模式代码（统一队列操作）

# 当前问题：
1.音画不同步，视频画面缺少前部分，音频完整。

# 预计更新：
上次问题解决方案：NV21-YUV颜色转换

————————————————————————————————————————————————————————————————————————

2020年8月8日12:58:46
# 当前进度：
1.录像正常，拍照正常。

# 待处理问题：
1.录像时拍照会存在卡住的情况并且录制的视频文件画面静止或者无法播放。

# 上次问题解决方案：
1.前几秒无关键帧，因为输入源的问题，使用camera的previewCallback来feedback到codec，这种方法不能控制I帧；必须用mediacodec.createInputSurface-openGl-codec
2.音视频不同步问题：统一STP并且再coder编码完拿到的bufferinfo中传入当前的纳秒，再给到Muxer，而不是在muxer中使用当前时间重新构建（这样的话STP是不正确的）
3.longClick同时会触发onclick，longClick返回true

————————————————————————————————————————————————————————————————————————

2020年8月9日10:40:41
# 当前进度：
1.录像，拍照，录像中拍照功能。已全部处理完成。

# 待处理问题：
1.下周将处理解码播放，显示图片的功能。

# 上次问题解决方案：
1.在使用textureview进行预览，调用camera.takePic时。preview will stopped after the img is taken, must call startPreview again if want to take pic or re-start preview

————————————————————————————————————————————————————————————————————————

2020年8月14日17:40:41
# 当前进度：
1.使用Muxer混合音视频数据时，消费者生产者模式改为使用BlockingQueue，这样可以不使用wait/notify，同时也不用加Object锁，更简洁方便。

# 待处理问题：
1.明天将处理解码播放，显示图片的功能。

# 上次问题解决方案：

————————————————————————————————————————————————————————————————————————

2020年8月15日15:03:19
# 当前进度：
1.MediaCodec解码到textureView直接播放MP4文件。

# 待处理问题：
1.解码播放时间戳问题，导致播放速度过快
2.目前只有视频，需要增加音频播放
3.代码结构需要优化重构

# 上次问题解决方案：

————————————————————————————————————————————————————————————————————————

2020年8月16日12:36:45
# 当前进度：
1.播放MP4文件。一切正常。

# 待处理问题：
1.TextureView更换为GLSurface，因为需要加水印，特效，以及视频和图像的处理，所以需要学习OpenGL ES了。

# 上次问题解决方案：
1.传入的PTS根据mediaFormat中的frameRate走，并且视频加入帧率控制。
2.增加音频的播放，MediaCodec-AudioTrack

————————————————————————————————————————————————————————————————————————
总结：
    本demo时间横跨一个月，每周末跟进进度，用时四个周末。到此也就告一段落了。
主要熟悉了音视频编解码简单API的使用以及一些基本的处理。
    下一阶段需要学习OpenGL ES，这样才会支持更多的操作，基于这个demo，逐步开始更换为新的方式，会在GitHub上重新new一个project。
目前的构想是最终实现一个音视频录制播放器，可以加一些流行的效果（参照热门的短视频APP，美图APP）
    基础功能大概如下：
1. 主动操作：拍照/录像，并在操作过程中可以添加 滤镜，水印TAG，自动美颜/瘦脸 等热门效果
2. 被动操作：查看照片/视频：
                1. 照片：滤镜，水印TAG，修图/美颜，单图剪裁，多图拼接
                2. 视频：暂停/跳转/拖动，快进快退，倍速调整，水印，滤镜，视频截取，